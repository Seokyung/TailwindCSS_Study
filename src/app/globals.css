@import "tailwindcss";

body {
  margin: 16px;
  button {
    cursor: pointer;
  }
}

/* @theme 지시어를 활용하여 이미 존재하는 유틸리티 클래스 조작하기 */
@theme {
  /* 색깔에 mint-500을 추가 */
  --color-mint-500: #008080;
  /* 색깔에 mycolor-400을 추가 */
  --color-mycolor-400: #dedede;
  /* 커스텀 색상 (애플민트) */
  --color-applemint-500: oklch(0.85 0.074 170.47);
}

/* @utility 지시어를 활용한 나만의 유틸리티 클래스 만들기 */
@utility my-class {
  background-color: black;
  color: white;
  padding: 10px;
  font-size: 20px;
}

/* @variants 지시어를 활용한 다크모드, 호버 등 상태 변화 시 css 적용하기 */
@utility my-element {
  background-color: red;
  color: white;
  padding: 10px;
  font-size: 20px;
  @variant dark {
    background-color: green;
  }
  @variant hover {
    font-size: 50px;
  }
}

/* layer 지시어 사용하기 */
@layer components {
  /* h1 {
    @apply text-2xl;
  } */
  .title {
    color: purple;
    font-weight: 700;
    margin-bottom: 6px;
  }
  /* CSS 변수로 테마 변수 사용하기 */
  .typography {
    /* border: 1px solid var(--color-gray-500); */
    border-radius: var(--radius-md);
    padding: 6px 8px;
    h1 {
      font-size: var(--text-3xl);
      font-weight: var(--font-weight-semibold);
      color: var(--color-gray-800);
    }
    p {
      font-size: var(--text-base);
      color: var(--color-mint-500);
    }
  }
}

@layer base {
  /* h1 {
    @apply text-7xl;
  } */
}

/* 간단한 다크모드 구현 (OS 시스템) */
/* .container {
  color: #333;
  background-color: #fff;
}

@media (prefers-color-scheme: dark) {
  .container {
    color: #fff;
    background-color: #333;
  }
} */

/* 수동으로 다크모드 처리하는 법 */
@custom-variant dark (&:where(.dark, .dark *));

/* 커스텀 셀렉터 만들기 */
/* @custom-variant dark (&:where([data-theme=dark], [data-theme=dark] *)); */
